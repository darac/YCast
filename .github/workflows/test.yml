---
name: Test
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
      - master
    tags:
      - "*"
jobs:
  docker-image:
    strategy:
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          cache: poetry
          python-version: ${{ matrix.python_version }}

      - name: Get project version
        id: proj-version
        run:
          echo "PROJECT_VERSION=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          tags: |
            ghcr.io/darac/ycast:${{ steps.proj-version.outputs.PROJECT_VERSION }}-py${{ matrix.python_version }}
          annotations: |
            org.opencontainers.image.created=$(date --rfc-3339=seconds)
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.proj-version.outputs.PROJECT_VERSION }}
            org.opencontainers.image.licenses=GPL-3.0-or-later
          push: true

      # TODO
      # - name: Smoke test docker image
      #   run: docker run --rm ghcr.io/darac/ycast:${{ steps.proj-version.outputs.PROJECT_VERSION }}-py${{ matrix.python_version }}
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install poetry
        run: pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          cache: poetry
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies with poetry
        run: poetry install

      - name: Get project version
        id: proj-version
        run:
          echo "PROJECT_VERSION=$(poetry version --short)" >> "$GITHUB_OUTPUT"

      - uses: chartboost/ruff-action@v1

      - run:
          poetry run pytest --cov --cov-report=xml:coverage.xml
          --junit-xml=junit.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: ${{ env.SONAR_TOKEN != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{
            steps.proj-version.outputs.PROJECT_VERSION }}

      - name: Publish Test Report
        uses: pmeier/pytest-results-action@v0.4.0
        if: always()
        with:
          path: "junit.xml"

      # Block the merge if the Poetry version wasn't bumped
      - name: Check for existing tag
        uses: mukunku/tag-exists-action@v1.4.0
        id: checkTag
        with:
          tag: ${{ steps.proj-version.outputs.PROJECT_VERSION }}

      - name: Fail if not bumped
        if:
          ${{ github.event.pull_request.merged == false &&
          steps.checkTag.outputs.exists == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed("There is already a tag for ${{ steps.proj-version.outputs.PROJECT_VERSION }}. Run 'poetry version minor' to bump the day.");
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: "There is already a tag for ${{ steps.proj-version.outputs.PROJECT_VERSION }}. Run `poetry version minor' to bump the day."
            })
