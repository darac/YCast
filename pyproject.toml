[tool.poetry]
    authors = ["milaq <micha.laqua@gmail.com>"]
    classifiers = [
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'Intended Audience :: System Administrators',
        'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',
        'Natural Language :: English',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: Python :: 3',
        'Topic :: Multimedia :: Sound/Audio',
        'Topic :: Software Development :: Libraries :: Python Modules',
    ]
    description = "Self hosted vTuner internet radio service emulation"
    exclude = ["contrib", "docs", "tests"]
    keywords = [
        'avr',
        'denon',
        'emulation',
        'internet radio',
        'music',
        'onkyo',
        'radio',
        'shoutcast',
        'streaming',
        'vtuner',
        'yamaha',
        'ycast',
    ]
    license = "GPL-3.0-or-later"
    maintainers = [
        "Thomas Hanika <thomas@hanika-co.de>",
        "darac <darac+github@darac.org.uk>",
    ]
    name = "ycast"
    readme = "README.md"
    repository = "https://github.com/darac/YCast"
    version = "1.3.1"

    [tool.poetry.dependencies]
        Flask              = "^3.0.0"
        Pillow             = "^10.1.0"
        PyYAML             = "^6.0.1"
        importlib-metadata = { version = "^1.0", python = "<3.8" }
        python             = "^3.10"
        requests           = "^2.31.0"
        xdg-base-dirs      = "^6.0.1"

    [tool.poetry.group.dev.dependencies]
        coverage            = { version = "^7.3.2", extras = ["toml"] }
        mypy                = "^1.7.1"
        poetry              = "^1.7.1"
        pre-commit          = "^3.6.0"
        pytest              = "^7.4.3"
        pytest-cov          = "^4.1.0"
        pytest-gh-log-group = "^0.2.0"
        ruff                = "^0.1.8"
        types-pyyaml        = "^6.0.12.12"
        types-requests      = "^2.31.0.10"

[tool.poetry.scripts]
    ycast = "ycast.__main__:launch_server"

[build-system]
    build-backend = "poetry.core.masonry.api"
    requires      = ["poetry-core"]

[tool.coverage.report]
    exclude_lines = [
        "def __repr__",
        "if 0:",
        "if __name__ == __main__:",
        "if self.debug",
        "if settings.DEBUG:",
        "pragma: no cover",
        "raise AssertionError",
        "raise NotImplementedError",
    ]
    fail_under = 40
    show_missing = true

[tool.coverage.run]
    branch         = true
    relative_files = true
    source         = ["ycast"]

[tool.mypy]
    ignore_missing_imports = true
    warn_return_any        = true
    warn_unused_configs    = true

[tool.pytest.ini_options]
    addopts          = "--cov --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml"
    junit_suite_name = "ycast"

[tool.ruff]
    ignore = [
        "COM812", # Allow ruff formatter
        "FIX002", # TODOs are allowed, but must conform to other conventions
        "ISC001", # Allow ruff formatter
        "N818",   # Don't want to have to call exceptions *Error
        "S101",   # Of course we want to use assert
        "UP037",  # A Python 3.10/3.11 difference
    ]
    line-length = 99
    select = [
        "A",
        "ANN",
        "ARG",
        "ASYNC",
        "B",
        "C4",
        "COM",
        "E",
        "EM",
        "EXE",
        "F",
        "FA",
        "FIX",
        "G",
        "I",
        "ICN",
        "INP",
        "ISC",
        "N",
        "NPY",
        "PD",
        "PERF",
        "PIE",
        "PT",
        "PTH",
        "Q",
        "RET",
        "RSE",
        "RUF",
        "S",
        "SIM",
        "SLF",
        "TCH",
        "TD",
        "TID",
        "TRY",
        "UP",
        "W",
        "YTT",
    ]
